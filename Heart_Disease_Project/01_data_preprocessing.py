# -*- coding: utf-8 -*-
"""01_data_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Oz00EM02tena_Nu8do0sFNW7mHyOCN5I
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer

from google.colab import drive
import os

# Mount Google Drive
drive.mount('/content/drive')

# Define a consistent project folder inside Google Drive
project_path = "/content/drive/MyDrive/Heart_Disease_Project"
data_path = os.path.join(project_path, "data")

# Create the data folder if it doesnâ€™t exist
os.makedirs(data_path, exist_ok=True)

print("Project path set to:", project_path)
print("Data path set to:", data_path)

url = "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
column_names = [
    'age', 'sex', 'cp', 'trestbps', 'chol', 'fbs',
    'restecg', 'thalach', 'exang', 'oldpeak',
    'slope', 'ca', 'thal', 'target'
]

df = pd.read_csv(url, names=column_names, na_values="?")

print("Dataset Shape:", df.shape)
print(df.head())

print("Missing values:\n", df.isnull().sum())


df['ca'] = df['ca'].fillna(df['ca'].mode()[0])
df['thal'] = df['thal'].fillna(df['thal'].mode()[0])

categorical_features = ['cp', 'restecg', 'slope', 'thal']

df = pd.get_dummies(df, columns=categorical_features, drop_first=True)

numerical_features = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak', 'ca']
scaler = StandardScaler()
df[numerical_features] = scaler.fit_transform(df[numerical_features])

# Histogram
df.hist(figsize=(12, 8))
plt.suptitle("Histograms of Features", fontsize=16)
plt.show()

# Correlation Heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(df.corr(), annot=False, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

# Boxplots
plt.figure(figsize=(12, 6))
sns.boxplot(data=df[numerical_features])
plt.title("Boxplots of Numerical Features")
plt.show()

os.makedirs("data", exist_ok=True)

df.to_csv(os.path.join(data_path, "cleaned_heart.csv"), index=False)
print("Cleaned dataset saved at", os.path.join(data_path, "cleaned_heart.csv"))


print("Cleaned dataset saved at data/cleaned_heart.csv")
print("Final shape:", df.shape)